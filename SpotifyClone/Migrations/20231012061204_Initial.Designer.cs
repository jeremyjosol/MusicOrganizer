// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyClone.Models;

#nullable disable

namespace SpotifyClone.Migrations
{
    [DbContext(typeof(SpotifyCloneContext))]
    [Migration("20231012061204_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SpotifyClone.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlbumArtworkUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("AlbumId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SpotifyClone.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("PlaylistId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("SpotifyClone.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlbumArtworkUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("SongId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("SpotifyClone.Models.Album", b =>
                {
                    b.HasOne("SpotifyClone.Models.Playlist", null)
                        .WithMany("Albums")
                        .HasForeignKey("PlaylistId");
                });

            modelBuilder.Entity("SpotifyClone.Models.Song", b =>
                {
                    b.HasOne("SpotifyClone.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpotifyClone.Models.Playlist", null)
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("SpotifyClone.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("SpotifyClone.Models.Playlist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
